# Xiaomi Video EXIF Enhancer Docker Image (RTX 50シリーズ専用)
FROM python:3.11-slim

# メタデータの設定
LABEL maintainer="Xiaomi Video EXIF Enhancer"
LABEL description="Container for processing Xiaomi camera videos with EXIF metadata enhancement (RTX 50 series optimized)"
LABEL version="1.0.0"

# 環境変数の設定
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DEBIAN_FRONTEND=noninteractive
# RTX 50シリーズ用CUDA設定
ENV CUDA_LAUNCH_BLOCKING=1
ENV TORCH_USE_CUDA_DSA=1

# 作業ディレクトリの設定
WORKDIR /app

# 必要な最小限のパッケージのみインストール
RUN apt-get update && apt-get install -y \
    ffmpeg \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libgl1-mesa-glx \
    git \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Pythonの依存関係ファイルをコピー
COPY requirements.txt .

# 基本的な依存関係のインストール
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# RTX 50シリーズ対応PyTorchのインストール（開発版）
RUN pip install --no-cache-dir --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu124 || \
    pip install --no-cache-dir torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu

# アプリケーションコードをコピー
COPY . .

# 実行可能にする
RUN chmod +x exif_enhancer.py

# 非rootユーザーの作成（セキュリティ向上）
RUN groupadd -r appuser && useradd -r -g appuser -m appuser
RUN chown -R appuser:appuser /app

# データディレクトリの作成
RUN mkdir -p /app/input /app/output && \
    chown -R appuser:appuser /app/input /app/output

# 非rootユーザーに切り替え
USER appuser

# ヘルスチェック
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import sys; from exif_enhancer import XiaomiVideoEXIFEnhancer; print('Container is healthy'); sys.exit(0)"

# ボリュームのマウントポイント
VOLUME ["/app/input", "/app/output"]

# デフォルトのエントリーポイント
ENTRYPOINT ["python", "exif_enhancer.py"]

# デフォルトコマンド（ヘルプ表示）
CMD ["--help"]